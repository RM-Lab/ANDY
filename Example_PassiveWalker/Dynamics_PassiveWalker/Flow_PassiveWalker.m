function [dq,ds,l]=Flow_PassiveWalker(flow,t,q,p,u,s,l)
    dq=q*0;
    ds=s*0;
%SWITCHCASE_

	switch flow
	    case 1
	        [dq,ds,l]=Flow_1_PassiveWalker(t,q,p,u,s,l);
	    case 2
	        [dq,ds,l]=Flow_2_PassiveWalker(t,q,p,u,s,l);
	    case 3
	        [dq,ds,l]=Flow_3_PassiveWalker(t,q,p,u,s,l);
	    case 4
	        [dq,ds,l]=Flow_4_PassiveWalker(t,q,p,u,s,l);
	    case 5
	        [dq,ds,l]=Flow_5_PassiveWalker(t,q,p,u,s,l);
	    case 6
	        [dq,ds,l]=Flow_6_PassiveWalker(t,q,p,u,s,l);
	end


	function allConsJacobian = fullConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
	%FULLCONSJACOBIAN
	%    ALLCONSJACOBIAN = FULLCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:53
	qi1__dt_0 = in2(3,:);
	qi2__dt_0 = in2(4,:);
	qo1__dt_0 = in2(5,:);
	qo2__dt_0 = in2(6,:);
	allConsJacobian = reshape([0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,cos(qi1__dt_0).*(1.0./2.0),sin(qi1__dt_0).*(1.0./2.0),0.0,0.0,0.0,-1.0,cos(qi2__dt_0).*(1.0./2.0),sin(qi2__dt_0).*(1.0./2.0),0.0,0.0,0.0,0.0,0.0,0.0,1.0,cos(qo1__dt_0).*(1.0./2.0),sin(qo1__dt_0).*(1.0./2.0),0.0,0.0,0.0,-1.0,cos(qo2__dt_0).*(1.0./2.0),sin(qo2__dt_0).*(1.0./2.0)],[6,6]);
	end

	function GFMatrix = GFMat(t,in2,in3,in4,NHSIGNAL,in6)
	%GFMAT
	%    GFMATRIX = GFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:54
	a = in4(1,:);
	b = in4(2,:);
	qi1__dt_0 = in2(3,:);
	qi1__dt_1 = in2(9,:);
	qi2__dt_0 = in2(4,:);
	qi2__dt_1 = in2(10,:);
	qo1__dt_0 = in2(5,:);
	qo1__dt_1 = in2(11,:);
	qo2__dt_0 = in2(6,:);
	qo2__dt_1 = in2(12,:);
	qx__dt_1 = in2(7,:);
	qy__dt_1 = in2(8,:);
	t2 = sin(qi1__dt_0);
	t3 = qi1__dt_1.^2;
	t4 = sin(qo1__dt_0);
	t5 = qo1__dt_1.^2;
	t6 = cos(qi1__dt_0);
	t7 = qi2__dt_1.^2;
	t8 = cos(qo1__dt_0);
	t9 = qo2__dt_1.^2;
	t10 = qi1__dt_0-qi2__dt_0;
	t11 = sin(t10);
	t12 = qo1__dt_0-qo2__dt_0;
	t13 = sin(t12);
	GFMatrix = [sin(a).*8.4366e2-b.*qx__dt_1+t2.*t3.*(9.0./2.0)+t4.*t5.*(9.0./2.0)+t7.*sin(qi2__dt_0).*(7.0./5.0)+t9.*sin(qo2__dt_0).*(7.0./5.0);cos(a).*(-8.4366e2)-b.*qy__dt_1-t3.*t6.*(9.0./2.0)-t5.*t8.*(9.0./2.0)-t7.*cos(qi2__dt_0).*(7.0./5.0)-t9.*cos(qo2__dt_0).*(7.0./5.0);sin(a-qi1__dt_0).*4.4145e1-b.*qi1__dt_1-t7.*t11.*(7.0./1.0e1);sin(a-qi2__dt_0).*1.3734e1-b.*qi2__dt_1+t3.*t11.*(7.0./1.0e1);sin(a-qo1__dt_0).*4.4145e1-b.*qo1__dt_1-t9.*t13.*(7.0./1.0e1);sin(a-qo2__dt_0).*1.3734e1-b.*qo2__dt_1+t5.*t13.*(7.0./1.0e1)];
	end

	function MMatrix = MMat(t,in2,in3,in4,NHSIGNAL,in6)
	%MMAT
	%    MMATRIX = MMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:54
	qi1__dt_0 = in2(3,:);
	qi2__dt_0 = in2(4,:);
	qo1__dt_0 = in2(5,:);
	qo2__dt_0 = in2(6,:);
	t2 = cos(qi1__dt_0);
	t3 = t2.*(9.0./2.0);
	t4 = sin(qi1__dt_0);
	t5 = t4.*(9.0./2.0);
	t6 = cos(qi2__dt_0);
	t7 = t6.*(7.0./5.0);
	t8 = sin(qi2__dt_0);
	t9 = t8.*(7.0./5.0);
	t10 = qi1__dt_0-qi2__dt_0;
	t11 = cos(t10);
	t12 = t11.*(7.0./1.0e1);
	t13 = cos(qo1__dt_0);
	t14 = t13.*(9.0./2.0);
	t15 = sin(qo1__dt_0);
	t16 = t15.*(9.0./2.0);
	t17 = cos(qo2__dt_0);
	t18 = t17.*(7.0./5.0);
	t19 = sin(qo2__dt_0);
	t20 = t19.*(7.0./5.0);
	t21 = qo1__dt_0-qo2__dt_0;
	t22 = cos(t21);
	t23 = t22.*(7.0./1.0e1);
	MMatrix = reshape([8.6e1,0.0,t3,t7,t14,t18,0.0,8.6e1,t5,t9,t16,t20,t3,t5,3.3e1./2.0e1,t12,0.0,0.0,t7,t9,t12,4.9e1./1.25e2,0.0,0.0,t14,t16,0.0,0.0,3.3e1./2.0e1,t23,t18,t20,0.0,0.0,t23,4.9e1./1.25e2],[6,6]);
	end

	function sExpr = NHSignalODE(t,in2,in3,in4,NHSIGNAL,in6)
	%NHSIGNALODE
	%    SEXPR = NHSIGNALODE(T,IN2,IN3,IN4,NHSIGNAL,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:54
	sExpr = 0.0;
	end

	function [dq,ds,l]=Flow_1_PassiveWalker(t,q,p,u,s,l)
	    l=lambdaUpdate(t,q,p,u,s,l);    
	    qSize=numel(q);
	    MM=MMat(t,q,p,u,s,l);
	    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
	    ds=NHSignalODE(t,q,p,u,s,l);
	    function l=lambdaUpdate(t,q,p,u,s,l)
	        l=l*0;
	        lActive=activeConsNum();
	        M=MMat(t,q,p,u,s,l);
	        J=partialConsJacobian(t,q,p,u,s,l);
	        if ~(lActive==0)
	            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
	        end
	    end
		function consNum = activeConsNum
		%ACTIVECONSNUM
		%    CONSNUM = ACTIVECONSNUM
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:39
		consNum = [1.0;2.0;3.0];
		end
		function JCons = partialConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
		%PARTIALCONSJACOBIAN
		%    JCONS = PARTIALCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:39
		qi1__dt_0 = in2(3,:);
		qi2__dt_0 = in2(4,:);
		JCons = reshape([0.0,1.0,0.0,0.0,0.0,1.0,1.0,cos(qi1__dt_0).*(1.0./2.0),sin(qi1__dt_0).*(1.0./2.0),-1.0,cos(qi2__dt_0).*(1.0./2.0),sin(qi2__dt_0).*(1.0./2.0),0.0,0.0,0.0,0.0,0.0,0.0],[3,6]);
		end
		function CorMatrix = consCorMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSCORMAT
		%    CORMATRIX = CONSCORMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:39
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		t2 = qi1__dt_1.^2;
		t3 = qi2__dt_1.^2;
		CorMatrix = [0.0;t2.*sin(qi1__dt_0).*(-1.0./2.0)-t3.*sin(qi2__dt_0).*(1.0./2.0);t2.*cos(qi1__dt_0).*(1.0./2.0)+t3.*cos(qi2__dt_0).*(1.0./2.0)];
		end
		function ConsGFMatrix = consGFMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSGFMAT
		%    CONSGFMATRIX = CONSGFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:40
		c = in4(3,:);
		fx = in3(1,:);
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		qx__dt_0 = in2(1,:);
		qx__dt_1 = in2(7,:);
		qy__dt_0 = in2(2,:);
		qy__dt_1 = in2(8,:);
		t2 = cos(qi1__dt_0);
		t3 = cos(qi2__dt_0);
		t4 = sin(qi1__dt_0);
		t5 = sin(qi2__dt_0);
		t6 = qi1__dt_0-qi2__dt_0;
		t7 = qi1__dt_0.*4.0;
		t8 = sin(t6);
		t9 = cos(t6);
		ConsGFMatrix = [c.*(fx.*-2.0+qx__dt_0.*2.0+qx__dt_1.*2.0+t4+t5+qi1__dt_1.*t2+qi2__dt_1.*t3).*(-1.0./2.0);c.*(qy__dt_0.*2.0+qy__dt_1.*2.0-t2-t3+qi1__dt_1.*t4+qi2__dt_1.*t5).*(-1.0./2.0);c.*(qi1__dt_1.*5.0-qi2__dt_0.*4.0-qi2__dt_1.*4.0+t7-t8-fx.*t2.*2.0+qi2__dt_1.*t9+qx__dt_0.*t2.*2.0+qx__dt_1.*t2.*2.0+qy__dt_0.*t4.*2.0+qy__dt_1.*t4.*2.0).*(-1.0./4.0);c.*(qi1__dt_1.*-4.0+qi2__dt_0.*4.0+qi2__dt_1.*5.0-t7+t8-fx.*t3.*2.0+qi1__dt_1.*t9+qx__dt_0.*t3.*2.0+qx__dt_1.*t3.*2.0+qy__dt_0.*t5.*2.0+qy__dt_1.*t5.*2.0).*(-1.0./4.0);0.0;0.0];
		end
	end

	function [dq,ds,l]=Flow_2_PassiveWalker(t,q,p,u,s,l)
	    l=lambdaUpdate(t,q,p,u,s,l);    
	    qSize=numel(q);
	    MM=MMat(t,q,p,u,s,l);
	    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
	    ds=NHSignalODE(t,q,p,u,s,l);
	    function l=lambdaUpdate(t,q,p,u,s,l)
	        l=l*0;
	        lActive=activeConsNum();
	        M=MMat(t,q,p,u,s,l);
	        J=partialConsJacobian(t,q,p,u,s,l);
	        if ~(lActive==0)
	            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
	        end
	    end
		function consNum = activeConsNum
		%ACTIVECONSNUM
		%    CONSNUM = ACTIVECONSNUM
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:41
		consNum = [4.0;1.0;2.0;3.0];
		end
		function JCons = partialConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
		%PARTIALCONSJACOBIAN
		%    JCONS = PARTIALCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:41
		qi1__dt_0 = in2(3,:);
		qi2__dt_0 = in2(4,:);
		JCons = reshape([0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,cos(qi1__dt_0).*(1.0./2.0),sin(qi1__dt_0).*(1.0./2.0),0.0,-1.0,cos(qi2__dt_0).*(1.0./2.0),sin(qi2__dt_0).*(1.0./2.0),1.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0],[4,6]);
		end
		function CorMatrix = consCorMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSCORMAT
		%    CORMATRIX = CONSCORMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:41
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		t2 = qi1__dt_1.^2;
		t3 = qi2__dt_1.^2;
		CorMatrix = [0.0;0.0;t2.*sin(qi1__dt_0).*(-1.0./2.0)-t3.*sin(qi2__dt_0).*(1.0./2.0);t2.*cos(qi1__dt_0).*(1.0./2.0)+t3.*cos(qi2__dt_0).*(1.0./2.0)];
		end
		function ConsGFMatrix = consGFMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSGFMAT
		%    CONSGFMATRIX = CONSGFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:42
		c = in4(3,:);
		fx = in3(1,:);
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		qx__dt_0 = in2(1,:);
		qx__dt_1 = in2(7,:);
		qy__dt_0 = in2(2,:);
		qy__dt_1 = in2(8,:);
		t2 = cos(qi1__dt_0);
		t3 = cos(qi2__dt_0);
		t4 = sin(qi1__dt_0);
		t5 = sin(qi2__dt_0);
		t6 = qi1__dt_0-qi2__dt_0;
		t7 = qi1__dt_0.*4.0;
		t8 = sin(t6);
		t9 = cos(t6);
		t10 = qo1__dt_0+qo1__dt_1-qo2__dt_0-qo2__dt_1;
		ConsGFMatrix = [c.*(fx.*-2.0+qx__dt_0.*2.0+qx__dt_1.*2.0+t4+t5+qi1__dt_1.*t2+qi2__dt_1.*t3).*(-1.0./2.0);c.*(qy__dt_0.*2.0+qy__dt_1.*2.0-t2-t3+qi1__dt_1.*t4+qi2__dt_1.*t5).*(-1.0./2.0);c.*(qi1__dt_1.*5.0-qi2__dt_0.*4.0-qi2__dt_1.*4.0+t7-t8-fx.*t2.*2.0+qi2__dt_1.*t9+qx__dt_0.*t2.*2.0+qx__dt_1.*t2.*2.0+qy__dt_0.*t4.*2.0+qy__dt_1.*t4.*2.0).*(-1.0./4.0);c.*(qi1__dt_1.*-4.0+qi2__dt_0.*4.0+qi2__dt_1.*5.0-t7+t8-fx.*t3.*2.0+qi1__dt_1.*t9+qx__dt_0.*t3.*2.0+qx__dt_1.*t3.*2.0+qy__dt_0.*t5.*2.0+qy__dt_1.*t5.*2.0).*(-1.0./4.0);-c.*t10;c.*t10];
		end
	end

	function [dq,ds,l]=Flow_3_PassiveWalker(t,q,p,u,s,l)
	    l=lambdaUpdate(t,q,p,u,s,l);    
	    qSize=numel(q);
	    MM=MMat(t,q,p,u,s,l);
	    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
	    ds=NHSignalODE(t,q,p,u,s,l);
	    function l=lambdaUpdate(t,q,p,u,s,l)
	        l=l*0;
	        lActive=activeConsNum();
	        M=MMat(t,q,p,u,s,l);
	        J=partialConsJacobian(t,q,p,u,s,l);
	        if ~(lActive==0)
	            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
	        end
	    end
		function consNum = activeConsNum
		%ACTIVECONSNUM
		%    CONSNUM = ACTIVECONSNUM
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:43
		consNum = [4.0;2.0;3.0];
		end
		function JCons = partialConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
		%PARTIALCONSJACOBIAN
		%    JCONS = PARTIALCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:43
		qi1__dt_0 = in2(3,:);
		qi2__dt_0 = in2(4,:);
		JCons = reshape([0.0,1.0,0.0,0.0,0.0,1.0,0.0,cos(qi1__dt_0).*(1.0./2.0),sin(qi1__dt_0).*(1.0./2.0),0.0,cos(qi2__dt_0).*(1.0./2.0),sin(qi2__dt_0).*(1.0./2.0),1.0,0.0,0.0,-1.0,0.0,0.0],[3,6]);
		end
		function CorMatrix = consCorMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSCORMAT
		%    CORMATRIX = CONSCORMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:44
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		t2 = qi1__dt_1.^2;
		t3 = qi2__dt_1.^2;
		CorMatrix = [0.0;t2.*sin(qi1__dt_0).*(-1.0./2.0)-t3.*sin(qi2__dt_0).*(1.0./2.0);t2.*cos(qi1__dt_0).*(1.0./2.0)+t3.*cos(qi2__dt_0).*(1.0./2.0)];
		end
		function ConsGFMatrix = consGFMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSGFMAT
		%    CONSGFMATRIX = CONSGFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:44
		c = in4(3,:);
		fx = in3(1,:);
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		qx__dt_0 = in2(1,:);
		qx__dt_1 = in2(7,:);
		qy__dt_0 = in2(2,:);
		qy__dt_1 = in2(8,:);
		t2 = cos(qi1__dt_0);
		t3 = cos(qi2__dt_0);
		t4 = sin(qi1__dt_0);
		t5 = sin(qi2__dt_0);
		t6 = qi1__dt_0-qi2__dt_0;
		t7 = sin(t6);
		t8 = cos(t6);
		t9 = qo1__dt_0+qo1__dt_1-qo2__dt_0-qo2__dt_1;
		ConsGFMatrix = [c.*(fx.*-2.0+qx__dt_0.*2.0+qx__dt_1.*2.0+t4+t5+qi1__dt_1.*t2+qi2__dt_1.*t3).*(-1.0./2.0);c.*(qy__dt_0.*2.0+qy__dt_1.*2.0-t2-t3+qi1__dt_1.*t4+qi2__dt_1.*t5).*(-1.0./2.0);c.*(qi1__dt_1-t7-fx.*t2.*2.0+qi2__dt_1.*t8+qx__dt_0.*t2.*2.0+qx__dt_1.*t2.*2.0+qy__dt_0.*t4.*2.0+qy__dt_1.*t4.*2.0).*(-1.0./4.0);c.*(qi2__dt_1+t7-fx.*t3.*2.0+qi1__dt_1.*t8+qx__dt_0.*t3.*2.0+qx__dt_1.*t3.*2.0+qy__dt_0.*t5.*2.0+qy__dt_1.*t5.*2.0).*(-1.0./4.0);-c.*t9;c.*t9];
		end
	end

	function [dq,ds,l]=Flow_4_PassiveWalker(t,q,p,u,s,l)
	    l=lambdaUpdate(t,q,p,u,s,l);    
	    qSize=numel(q);
	    MM=MMat(t,q,p,u,s,l);
	    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
	    ds=NHSignalODE(t,q,p,u,s,l);
	    function l=lambdaUpdate(t,q,p,u,s,l)
	        l=l*0;
	        lActive=activeConsNum();
	        M=MMat(t,q,p,u,s,l);
	        J=partialConsJacobian(t,q,p,u,s,l);
	        if ~(lActive==0)
	            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
	        end
	    end
		function consNum = activeConsNum
		%ACTIVECONSNUM
		%    CONSNUM = ACTIVECONSNUM
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:45
		consNum = [4.0;5.0;6.0];
		end
		function JCons = partialConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
		%PARTIALCONSJACOBIAN
		%    JCONS = PARTIALCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:45
		qo1__dt_0 = in2(5,:);
		qo2__dt_0 = in2(6,:);
		JCons = reshape([0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,cos(qo1__dt_0).*(1.0./2.0),sin(qo1__dt_0).*(1.0./2.0),-1.0,cos(qo2__dt_0).*(1.0./2.0),sin(qo2__dt_0).*(1.0./2.0)],[3,6]);
		end
		function CorMatrix = consCorMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSCORMAT
		%    CORMATRIX = CONSCORMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:46
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		t2 = qo1__dt_1.^2;
		t3 = qo2__dt_1.^2;
		CorMatrix = [0.0;t2.*sin(qo1__dt_0).*(-1.0./2.0)-t3.*sin(qo2__dt_0).*(1.0./2.0);t2.*cos(qo1__dt_0).*(1.0./2.0)+t3.*cos(qo2__dt_0).*(1.0./2.0)];
		end
		function ConsGFMatrix = consGFMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSGFMAT
		%    CONSGFMATRIX = CONSGFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:46
		c = in4(3,:);
		fx = in3(1,:);
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		qx__dt_0 = in2(1,:);
		qx__dt_1 = in2(7,:);
		qy__dt_0 = in2(2,:);
		qy__dt_1 = in2(8,:);
		t2 = cos(qo1__dt_0);
		t3 = cos(qo2__dt_0);
		t4 = sin(qo1__dt_0);
		t5 = sin(qo2__dt_0);
		t6 = qo1__dt_0-qo2__dt_0;
		t7 = qo1__dt_0.*4.0;
		t8 = sin(t6);
		t9 = cos(t6);
		ConsGFMatrix = [c.*(fx.*-2.0+qx__dt_0.*2.0+qx__dt_1.*2.0+t4+t5+qo1__dt_1.*t2+qo2__dt_1.*t3).*(-1.0./2.0);c.*(qy__dt_0.*2.0+qy__dt_1.*2.0-t2-t3+qo1__dt_1.*t4+qo2__dt_1.*t5).*(-1.0./2.0);0.0;0.0;c.*(qo1__dt_1.*5.0-qo2__dt_0.*4.0-qo2__dt_1.*4.0+t7-t8-fx.*t2.*2.0+qo2__dt_1.*t9+qx__dt_0.*t2.*2.0+qx__dt_1.*t2.*2.0+qy__dt_0.*t4.*2.0+qy__dt_1.*t4.*2.0).*(-1.0./4.0);c.*(qo1__dt_1.*-4.0+qo2__dt_0.*4.0+qo2__dt_1.*5.0-t7+t8-fx.*t3.*2.0+qo1__dt_1.*t9+qx__dt_0.*t3.*2.0+qx__dt_1.*t3.*2.0+qy__dt_0.*t5.*2.0+qy__dt_1.*t5.*2.0).*(-1.0./4.0)];
		end
	end

	function [dq,ds,l]=Flow_5_PassiveWalker(t,q,p,u,s,l)
	    l=lambdaUpdate(t,q,p,u,s,l);    
	    qSize=numel(q);
	    MM=MMat(t,q,p,u,s,l);
	    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
	    ds=NHSignalODE(t,q,p,u,s,l);
	    function l=lambdaUpdate(t,q,p,u,s,l)
	        l=l*0;
	        lActive=activeConsNum();
	        M=MMat(t,q,p,u,s,l);
	        J=partialConsJacobian(t,q,p,u,s,l);
	        if ~(lActive==0)
	            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
	        end
	    end
		function consNum = activeConsNum
		%ACTIVECONSNUM
		%    CONSNUM = ACTIVECONSNUM
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:47
		consNum = [1.0;4.0;5.0;6.0];
		end
		function JCons = partialConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
		%PARTIALCONSJACOBIAN
		%    JCONS = PARTIALCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:48
		qo1__dt_0 = in2(5,:);
		qo2__dt_0 = in2(6,:);
		JCons = reshape([0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,1.0,cos(qo1__dt_0).*(1.0./2.0),sin(qo1__dt_0).*(1.0./2.0),0.0,-1.0,cos(qo2__dt_0).*(1.0./2.0),sin(qo2__dt_0).*(1.0./2.0)],[4,6]);
		end
		function CorMatrix = consCorMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSCORMAT
		%    CORMATRIX = CONSCORMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:48
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		t2 = qo1__dt_1.^2;
		t3 = qo2__dt_1.^2;
		CorMatrix = [0.0;0.0;t2.*sin(qo1__dt_0).*(-1.0./2.0)-t3.*sin(qo2__dt_0).*(1.0./2.0);t2.*cos(qo1__dt_0).*(1.0./2.0)+t3.*cos(qo2__dt_0).*(1.0./2.0)];
		end
		function ConsGFMatrix = consGFMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSGFMAT
		%    CONSGFMATRIX = CONSGFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:48
		c = in4(3,:);
		fx = in3(1,:);
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		qx__dt_0 = in2(1,:);
		qx__dt_1 = in2(7,:);
		qy__dt_0 = in2(2,:);
		qy__dt_1 = in2(8,:);
		t2 = cos(qo1__dt_0);
		t3 = cos(qo2__dt_0);
		t4 = sin(qo1__dt_0);
		t5 = sin(qo2__dt_0);
		t6 = qi1__dt_0+qi1__dt_1-qi2__dt_0-qi2__dt_1;
		t7 = qo1__dt_0-qo2__dt_0;
		t8 = qo1__dt_0.*4.0;
		t9 = sin(t7);
		t10 = cos(t7);
		ConsGFMatrix = [c.*(fx.*-2.0+qx__dt_0.*2.0+qx__dt_1.*2.0+t4+t5+qo1__dt_1.*t2+qo2__dt_1.*t3).*(-1.0./2.0);c.*(qy__dt_0.*2.0+qy__dt_1.*2.0-t2-t3+qo1__dt_1.*t4+qo2__dt_1.*t5).*(-1.0./2.0);-c.*t6;c.*t6;c.*(qo1__dt_1.*5.0-qo2__dt_0.*4.0-qo2__dt_1.*4.0+t8-t9-fx.*t2.*2.0+qo2__dt_1.*t10+qx__dt_0.*t2.*2.0+qx__dt_1.*t2.*2.0+qy__dt_0.*t4.*2.0+qy__dt_1.*t4.*2.0).*(-1.0./4.0);c.*(qo1__dt_1.*-4.0+qo2__dt_0.*4.0+qo2__dt_1.*5.0-t8+t9-fx.*t3.*2.0+qo1__dt_1.*t10+qx__dt_0.*t3.*2.0+qx__dt_1.*t3.*2.0+qy__dt_0.*t5.*2.0+qy__dt_1.*t5.*2.0).*(-1.0./4.0)];
		end
	end

	function [dq,ds,l]=Flow_6_PassiveWalker(t,q,p,u,s,l)
	    l=lambdaUpdate(t,q,p,u,s,l);    
	    qSize=numel(q);
	    MM=MMat(t,q,p,u,s,l);
	    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
	    ds=NHSignalODE(t,q,p,u,s,l);
	    function l=lambdaUpdate(t,q,p,u,s,l)
	        l=l*0;
	        lActive=activeConsNum();
	        M=MMat(t,q,p,u,s,l);
	        J=partialConsJacobian(t,q,p,u,s,l);
	        if ~(lActive==0)
	            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
	        end
	    end
		function consNum = activeConsNum
		%ACTIVECONSNUM
		%    CONSNUM = ACTIVECONSNUM
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:50
		consNum = [1.0;5.0;6.0];
		end
		function JCons = partialConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
		%PARTIALCONSJACOBIAN
		%    JCONS = PARTIALCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:50
		qo1__dt_0 = in2(5,:);
		qo2__dt_0 = in2(6,:);
		JCons = reshape([0.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,-1.0,0.0,0.0,0.0,cos(qo1__dt_0).*(1.0./2.0),sin(qo1__dt_0).*(1.0./2.0),0.0,cos(qo2__dt_0).*(1.0./2.0),sin(qo2__dt_0).*(1.0./2.0)],[3,6]);
		end
		function CorMatrix = consCorMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSCORMAT
		%    CORMATRIX = CONSCORMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:50
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		t2 = qo1__dt_1.^2;
		t3 = qo2__dt_1.^2;
		CorMatrix = [0.0;t2.*sin(qo1__dt_0).*(-1.0./2.0)-t3.*sin(qo2__dt_0).*(1.0./2.0);t2.*cos(qo1__dt_0).*(1.0./2.0)+t3.*cos(qo2__dt_0).*(1.0./2.0)];
		end
		function ConsGFMatrix = consGFMat(t,in2,in3,in4,NHSIGNAL,in6)
		%CONSGFMAT
		%    CONSGFMATRIX = CONSGFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
		%    This function was generated by the Symbolic Math Toolbox version 7.2.
		%    06-Apr-2018 17:34:51
		c = in4(3,:);
		fx = in3(1,:);
		qi1__dt_0 = in2(3,:);
		qi1__dt_1 = in2(9,:);
		qi2__dt_0 = in2(4,:);
		qi2__dt_1 = in2(10,:);
		qo1__dt_0 = in2(5,:);
		qo1__dt_1 = in2(11,:);
		qo2__dt_0 = in2(6,:);
		qo2__dt_1 = in2(12,:);
		qx__dt_0 = in2(1,:);
		qx__dt_1 = in2(7,:);
		qy__dt_0 = in2(2,:);
		qy__dt_1 = in2(8,:);
		t2 = cos(qo1__dt_0);
		t3 = cos(qo2__dt_0);
		t4 = sin(qo1__dt_0);
		t5 = sin(qo2__dt_0);
		t6 = qi1__dt_0+qi1__dt_1-qi2__dt_0-qi2__dt_1;
		t7 = qo1__dt_0-qo2__dt_0;
		t8 = sin(t7);
		t9 = cos(t7);
		ConsGFMatrix = [c.*(fx.*-2.0+qx__dt_0.*2.0+qx__dt_1.*2.0+t4+t5+qo1__dt_1.*t2+qo2__dt_1.*t3).*(-1.0./2.0);c.*(qy__dt_0.*2.0+qy__dt_1.*2.0-t2-t3+qo1__dt_1.*t4+qo2__dt_1.*t5).*(-1.0./2.0);-c.*t6;c.*t6;c.*(qo1__dt_1-t8-fx.*t2.*2.0+qo2__dt_1.*t9+qx__dt_0.*t2.*2.0+qx__dt_1.*t2.*2.0+qy__dt_0.*t4.*2.0+qy__dt_1.*t4.*2.0).*(-1.0./4.0);c.*(qo2__dt_1+t8-fx.*t3.*2.0+qo1__dt_1.*t9+qx__dt_0.*t3.*2.0+qx__dt_1.*t3.*2.0+qy__dt_0.*t5.*2.0+qy__dt_1.*t5.*2.0).*(-1.0./4.0)];
		end
	end

end

