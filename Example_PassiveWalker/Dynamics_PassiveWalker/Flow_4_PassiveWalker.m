function [dq,ds,l]=Flow_4_PassiveWalker(t,q,p,u,s,l)
    l=lambdaUpdate(t,q,p,u,s,l);    
    qSize=numel(q);
    MM=MMat(t,q,p,u,s,l);
    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
    ds=NHSignalODE(t,q,p,u,s,l);
    function l=lambdaUpdate(t,q,p,u,s,l)
        l=l*0;
        lActive=activeConsNum();
        M=MMat(t,q,p,u,s,l);
        J=partialConsJacobian(t,q,p,u,s,l);
        if ~(lActive==0)
            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
        end
    end

	function consNum = activeConsNum
	%ACTIVECONSNUM
	%    CONSNUM = ACTIVECONSNUM
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:45
	consNum = [4.0;5.0;6.0];
	end

	function JCons = partialConsJacobian(t,in2,in3,in4,NHSIGNAL,in6)
	%PARTIALCONSJACOBIAN
	%    JCONS = PARTIALCONSJACOBIAN(T,IN2,IN3,IN4,NHSIGNAL,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:45
	qo1__dt_0 = in2(5,:);
	qo2__dt_0 = in2(6,:);
	JCons = reshape([0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,cos(qo1__dt_0).*(1.0./2.0),sin(qo1__dt_0).*(1.0./2.0),-1.0,cos(qo2__dt_0).*(1.0./2.0),sin(qo2__dt_0).*(1.0./2.0)],[3,6]);
	end

	function CorMatrix = consCorMat(t,in2,in3,in4,NHSIGNAL,in6)
	%CONSCORMAT
	%    CORMATRIX = CONSCORMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:46
	qo1__dt_0 = in2(5,:);
	qo1__dt_1 = in2(11,:);
	qo2__dt_0 = in2(6,:);
	qo2__dt_1 = in2(12,:);
	t2 = qo1__dt_1.^2;
	t3 = qo2__dt_1.^2;
	CorMatrix = [0.0;t2.*sin(qo1__dt_0).*(-1.0./2.0)-t3.*sin(qo2__dt_0).*(1.0./2.0);t2.*cos(qo1__dt_0).*(1.0./2.0)+t3.*cos(qo2__dt_0).*(1.0./2.0)];
	end

	function ConsGFMatrix = consGFMat(t,in2,in3,in4,NHSIGNAL,in6)
	%CONSGFMAT
	%    CONSGFMATRIX = CONSGFMAT(T,IN2,IN3,IN4,NHSIGNAL,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:34:46
	c = in4(3,:);
	fx = in3(1,:);
	qo1__dt_0 = in2(5,:);
	qo1__dt_1 = in2(11,:);
	qo2__dt_0 = in2(6,:);
	qo2__dt_1 = in2(12,:);
	qx__dt_0 = in2(1,:);
	qx__dt_1 = in2(7,:);
	qy__dt_0 = in2(2,:);
	qy__dt_1 = in2(8,:);
	t2 = cos(qo1__dt_0);
	t3 = cos(qo2__dt_0);
	t4 = sin(qo1__dt_0);
	t5 = sin(qo2__dt_0);
	t6 = qo1__dt_0-qo2__dt_0;
	t7 = qo1__dt_0.*4.0;
	t8 = sin(t6);
	t9 = cos(t6);
	ConsGFMatrix = [c.*(fx.*-2.0+qx__dt_0.*2.0+qx__dt_1.*2.0+t4+t5+qo1__dt_1.*t2+qo2__dt_1.*t3).*(-1.0./2.0);c.*(qy__dt_0.*2.0+qy__dt_1.*2.0-t2-t3+qo1__dt_1.*t4+qo2__dt_1.*t5).*(-1.0./2.0);0.0;0.0;c.*(qo1__dt_1.*5.0-qo2__dt_0.*4.0-qo2__dt_1.*4.0+t7-t8-fx.*t2.*2.0+qo2__dt_1.*t9+qx__dt_0.*t2.*2.0+qx__dt_1.*t2.*2.0+qy__dt_0.*t4.*2.0+qy__dt_1.*t4.*2.0).*(-1.0./4.0);c.*(qo1__dt_1.*-4.0+qo2__dt_0.*4.0+qo2__dt_1.*5.0-t7+t8-fx.*t3.*2.0+qo1__dt_1.*t9+qx__dt_0.*t3.*2.0+qx__dt_1.*t3.*2.0+qy__dt_0.*t5.*2.0+qy__dt_1.*t5.*2.0).*(-1.0./4.0)];
	end

end

