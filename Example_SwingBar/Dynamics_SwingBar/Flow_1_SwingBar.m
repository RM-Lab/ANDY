function [dq,ds,l]=Flow_1_SwingBar(t,q,p,u,s,l)
    l=lambdaUpdate(t,q,p,u,s,l);    
    qSize=numel(q);
    MM=MMat(t,q,p,u,s,l);
    dq=[q((qSize/2+1):qSize);MM\(GFMat(t,q,p,u,s,l)+consGFMat(t,q,p,u,s,l)+fullConsJacobian(t,q,p,u,s,l).'*l)];
    ds=NHSignalODE(t,q,p,u,s,l);
    function l=lambdaUpdate(t,q,p,u,s,l)
        l=l*0;
        lActive=activeConsNum();
        M=MMat(t,q,p,u,s,l);
        J=partialConsJacobian(t,q,p,u,s,l);
        if ~(lActive==0)
            l(lActive)=-(J*(M\J.'))\(J*(M\GFMat(t,q,p,u,s,l))+consCorMat(t,q,p,u,s,l));
        end
    end

	function consNum = activeConsNum
	%ACTIVECONSNUM
	%    CONSNUM = ACTIVECONSNUM
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:40:10
	consNum = 0.0;
	end

	function JCons = partialConsJacobian(t,in2,DISCRETE,in4,in5,CONSSYM)
	%PARTIALCONSJACOBIAN
	%    JCONS = PARTIALCONSJACOBIAN(T,IN2,DISCRETE,IN4,IN5,CONSSYM)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:40:10
	JCons = 0.0;
	end

	function CorMatrix = consCorMat(t,in2,DISCRETE,in4,in5,CONSSYM)
	%CONSCORMAT
	%    CORMATRIX = CONSCORMAT(T,IN2,DISCRETE,IN4,IN5,CONSSYM)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:40:10
	CorMatrix = 0.0;
	end

	function ConsGFMatrix = consGFMat(t,in2,DISCRETE,in4,in5,CONSSYM)
	%CONSGFMAT
	%    CONSGFMATRIX = CONSGFMAT(T,IN2,DISCRETE,IN4,IN5,CONSSYM)
	%    This function was generated by the Symbolic Math Toolbox version 7.2.
	%    06-Apr-2018 17:40:10
	ConsGFMatrix = 0.0;
	end

end

